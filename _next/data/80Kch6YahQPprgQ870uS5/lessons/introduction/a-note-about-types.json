{"pageProps":{"post":{"attributes":{"title":"One last thing before we proceed","description":"Value, Reference, Mutable Reference"},"html":"<h2 id=\"one-more-thing-about-rust\">One more thing about rust</h2>\n<p>You will hear me say the following words</p>\n<br />\n\n<ul>\n<li>value</li>\n<li>mutable reference or mutable borrow</li>\n<li>immutable reference or immutable borrow</li>\n</ul>\n<br />\n\n<p>This isn&#39;t something that as a JS dev you think about.</p>\n<br />\n\n<p>So what is a reference (probably heard the term)?\nWhat is a mutable reference? (probably never heard this)?\n(whiteboard)</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h2 id=\"-is-a-unit\">() is a unit</h2>\n<p><code>()</code> is called &quot;unit.&quot; Effectively it is &quot;nothing&quot; value.</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-keyword\">if</span> <span class=\"hljs-literal\">true</span> {\n    <span class=\"hljs-built_in\">println!</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>);\n}\n\n\n<span class=\"hljs-comment\">// I could write this</span>\n<span class=\"hljs-comment\">// --v this has type ()</span>\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">foo</span> = <span class=\"hljs-keyword\">if</span> <span class=\"hljs-literal\">true</span> {\n    <span class=\"hljs-built_in\">println!</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>);\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n","slug":"a-note-about-types","title":"One last thing before we proceed","section":"Introduction","icon":"info-circle","filePath":"/home/runner/work/rust-for-typescript-devs/rust-for-typescript-devs/lessons/01-introduction/F-a-note-about-types.md","nextSlug":"/rust-for-typescript-devs/lessons/coding-rust/iterators","prevSlug":"/rust-for-typescript-devs/lessons/introduction/installation"}},"__N_SSG":true}